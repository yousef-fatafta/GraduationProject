@model (string Message, string Type)
@{
    Layout = "_Layout";
    ViewData["Title"] = "Notifications";

    var icon = Model.Type switch
    {
        "success" => "fas fa-check-circle",
        "error" => "fas fa-times-circle",
        "info" => "fas fa-info-circle",
        "warning" => "fas fa-exclamation-triangle",
        _ => "fas fa-bell"
    };
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"]</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />

    <style>
        @@keyframes toast-in {
            from {
                opacity: 0;
                transform: translateY(-20px) scale(0.95);
            }
            to {
                opacity: 1;
                transform: translateY(0) scale(1);
            }
        }

        .toast-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            background: rgba(7, 113, 60, 0);
            border: 1px solid rgba(4 113, 35, 0.3);
            color: #035a1c;
            backdrop-filter: blur(3px);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 9999;
        }

        .toast-wrapper {
            background: rgba(4, 113, 35, 0.12);
            border: 3px solid rgba(4, 113, 35, 0.3);
            color: #035a1c;
            padding: 1.5rem 2rem;
            font-weight: 600;
            font-size: 0.9rem;
            border-radius: 12px;
            text-align: center;
            backdrop-filter: blur(6px);
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease;
            position: relative;
            z-index: 1;
            animation: toast-in 0.4s ease-out forwards;
            max-width: 420px;
            width: 90%;
        }

        .toast-wrapper:hover {
            background: rgba(4, 113, 35, 0.18);
            color: #024a19;
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
            transform: scale(1.02);
        }

        .toast-close {
            position: absolute;
            top: 12px;
            right: 16px;
            border: none;
            background: rgba(0, 0, 0, 0.15);
            color: white;
            font-size: 1.25rem;
            border-radius: 50%;
            width: 32px;
            height: 32px;
            line-height: 30px;
            text-align: center;
            cursor: pointer;
            transition: background 0.3s ease;
        }

        .toast-close:hover {
            background: rgba(0, 0, 0, 0.3);
        }

        .toast-message {
            font-size: 1.1rem;
            font-weight: 600;
            color: #035a1c;
        }

        .logo-img {
            width: 35px;
            height: 35px;
            border-radius: 50%;
            object-fit: cover;
            border: 1px solid rgba(255, 255, 255, 0.4);
        }

        .logo-text {
            font-weight: 700;
            color: #035a1c;
            font-size: 1rem;
        }

        .toast-icon {
            font-size: 2.5rem;
            margin-bottom: 1rem;
            color: #035a1c;
        }
    </style>
</head>
<body>
    <div id="toast-overlay" class="toast-overlay">
        <div class="toast-wrapper">
            <button class="toast-close" onclick="closeToast()">×</button>

            <div class="d-flex align-items-center justify-content-center gap-2 mb-3">
                <img src="~/css/logo2.jpg" alt="Logo" class="logo-img" />
                <span class="logo-text">Onlink</span>
            </div>

            @if (TempData["PostMessage"] != null)
            {
                <div class="alert alert-success">@TempData["PostMessage"]</div>
            }

        </div>
    </div>

    <script>
        function closeToast() {
            const toast = document.getElementById("toast-overlay");
            if (toast) {
                toast.classList.add("opacity-0");
                setTimeout(() => toast.remove(), 500);
            }
        }

        window.addEventListener("DOMContentLoaded", () => {
            setTimeout(closeToast, 3000);
        });
    </script>
</body>
</html>
